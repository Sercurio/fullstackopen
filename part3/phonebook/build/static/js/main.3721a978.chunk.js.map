{"version":3,"sources":["PersonForm.js","Person.js","Persons.js","Filter.js","Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","persons","serviceHandler","setPersons","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","e","preventDefault","personObject","name","number","some","person","toLowerCase","window","confirm","find","onUpdatedPersonHandler","id","onAddedPersonHandler","value","onChange","target","type","Person","Persons","map","onClick","onDeletedPersonHandler","Filter","setPersonsToShow","useEffect","newFilter","filter","startsWith","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","display","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deletePerson","delete","App","personsToShow","notificationMessage","setNotificationMessage","initialPersons","p","setTimeout","catch","error","console","log","concat","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3721a978.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst PersonForm = ({ persons, setPersons, serviceHandler }) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const addPerson = (e) => {\r\n    e.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n    if (\r\n      persons.some(\r\n        (person) => person.name.toLowerCase() === newName.toLowerCase(),\r\n      )\r\n    ) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} already exist in the phonebook. Replace the old number with a new one?`,\r\n        )\r\n      ) {\r\n        const person = persons.find(\r\n          (person) => person.name.toLowerCase() === newName.toLowerCase(),\r\n        )\r\n        serviceHandler.onUpdatedPersonHandler(person.id, personObject)\r\n      }\r\n    } else {\r\n      serviceHandler.onAddedPersonHandler(personObject)\r\n    }\r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const handleNewNameChange = (e) => {\r\n    setNewName(e.target.value)\r\n  }\r\n\r\n  const handleNewNumberChange = (e) => {\r\n    setNewNumber(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNewNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNewNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","const Person = ({ person }) => (\r\n  <li>\r\n    {person.name} {person.number}\r\n  </li>\r\n)\r\n\r\nexport default Person\r\n","import Person from './Person'\r\n\r\nconst Persons = ({ persons, serviceHandler }) => {\r\n  return (\r\n    <ul>\r\n      {persons.map((person) => (\r\n        <div key={person.name}>\r\n          <Person person={person} />\r\n          <button onClick={() => serviceHandler.onDeletedPersonHandler(person)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import { useEffect } from 'react'\r\n\r\nconst Filter = ({ persons, setPersonsToShow }) => {\r\n  useEffect(() => {\r\n    setPersonsToShow(persons)\r\n  }, [persons, setPersonsToShow])\r\n\r\n  const handleFilterOnNameChange = (e) => {\r\n    const newFilter = e.target.value\r\n    setPersonsToShow(\r\n      newFilter === ''\r\n        ? persons\r\n        : persons.filter(\r\n            (person) =>\r\n              person.name.toLowerCase().startsWith(newFilter.toLowerCase()) ===\r\n              true,\r\n          ),\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      filter shown with: <input onChange={handleFilterOnNameChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","const Notification = ({ message }) => {\r\n  const notificationStyleSuccess = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    display: 'inline-block',\r\n  }\r\n  const notificationStyleError = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    display: 'inline-block',\r\n  }\r\n\r\n  if (message === null) return null\r\n  else if (message.startsWith('SUCCESS'))\r\n    return <div style={notificationStyleSuccess}>{message}</div>\r\n  else if (message.startsWith('ERROR'))\r\n    return <div style={notificationStyleError}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst personService = {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  deletePerson: deletePerson,\r\n}\r\n\r\nexport default personService\r\n","import React, { useState, useEffect } from 'react'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Filter from './Filter'\nimport Notification from './Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [personsToShow, setPersonsToShow] = useState([])\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons)\n      setPersonsToShow(initialPersons)\n    })\n  }, [])\n\n  const serviceHandler = {\n    onDeletedPersonHandler: (person) => {\n      if (window.confirm(`Are you sure you want to remove ${person.name}?`))\n        personService\n          .deletePerson(person.id)\n          .then((data) => {\n            setPersons(persons.filter((p) => p.id !== person.id))\n            setNotificationMessage(`SUCCESS ${person.name} deleted !`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n    },\n    onAddedPersonHandler: (person) => {\n      personService\n        .create(person)\n        .then((data) => {\n          setPersons(persons.concat(data))\n          setNotificationMessage(`SUCCESS ${person.name} added !`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    },\n    onUpdatedPersonHandler: (id, person) => {\n      personService\n        .update(id, person)\n        .then((data) => {\n          const newPersons = persons.map((p) => {\n            if (p.id === id) {\n              const updatedPerson = {\n                ...p,\n                number: person.number,\n              }\n              return updatedPerson\n            }\n            return p\n          })\n          setPersons(newPersons)\n          setNotificationMessage(`SUCCESS ${person.name} updated !`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch((error) => {\n          setNotificationMessage(\n            `ERROR when updating ${person.name}, the person was removed from the server`,\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n          personService.getAll().then((initialPersons) => {\n            setPersons(initialPersons)\n            setPersonsToShow(initialPersons)\n          })\n        })\n    },\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Filter\n        persons={persons}\n        setPersonsToShow={setPersonsToShow}\n        setPersons={setPersons}\n      />\n      <h2>Add a new</h2>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        serviceHandler={serviceHandler}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} serviceHandler={serviceHandler} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}